// RISC-V Instruction Memory
@0000

// Initialize registers
00a00093 // addi x1, x0, 10  // x1 = 10
01400113 // addi x2, x0, 20  // x2 = 20
01e00193 // addi x3, x0, 30  // x3 = 30
02800213 // addi x4, x0, 40  // x4 = 40
00000013 // nop
00000013 // nop
00000013 // nop
00000013 // nop
00000013 // nop

// Test arithmetic and logic instructions
002082b3 // add x5, x1, x2   // x5 = x1 + x2 = 10 + 20 = 30
40118333 // sub x6, x3, x1   // x6 = x3 - x1 = 30 - 10 = 20
003173b3 // and x7, x2, x3   // x7 = x2 & x3 = 20 & 30 = 20
00416433 // or x8, x2, x4    // x8 = x2 | x4 = 20 | 40 = 60
0030c4b3 // xor x9, x1, x3   // x9 = x1 ^ x3 = 10 ^ 30 = 20
00508513 // addi x10, x1, 5  // x10 = x1 + 5 = 10 + 5 = 15
0050c593 // xori x11, x1, 5  // x11 = x1 ^ 5 = 10 ^ 5 = 15
0050e613 // ori x12, x1, 5   // x12 = x1 | 5 = 10 | 5 = 15
0050f693 // andi x13, x1, 5  // x13 = x1 & 5 = 10 & 5 = 0
03039737 // lui x14, 12345   // x14 = 0x3039000
00018797 // auipc x15, 24    // x15 = PC + (24 << 12) = 0x4C + 0x18000 = 0x1804C
